generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["analytics", "comms", "core", "crm", "facilities", "grants", "lifecycle", "security"]
}

model OnboardingConfig {
  id        String   @id
  payload   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("core")
}

model OnboardingSubmissionRecord {
  id          String   @id @default(uuid())
  userId      String
  formId      String
  submittedAt DateTime
  payload     Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@schema("lifecycle")
}

model OnboardingChecklistRecord {
  startupId String   @id
  payload   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("lifecycle")
}

model OnboardingMilestonePlanRecord {
  startupId String   @id
  payload   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("lifecycle")
}

model OnboardingAlumniRecordStorage {
  startupId String   @id
  payload   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("lifecycle")
}

model OnboardingGrantCatalogRecord {
  startupId String   @id
  payload   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("grants")
}

model OnboardingDocumentRecord {
  id          String   @id @default(uuid())
  startupId   String
  key         String
  name        String
  size        Int
  contentType String?
  uploadedAt  DateTime @default(now())
  uploadedBy  String?
  metadata    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([startupId, key])
  @@schema("lifecycle")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  name        String?
  phone       String?
  avatarUrl   String?
  timezone    String?   @default("UTC")
  locale      String?   @default("en")
  metadata    Json?
  isActive    Boolean   @default(true)
  lastLoginAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([email])
  @@schema("core")
}

model FacilityResourceRecord {
  id           String   @id @default(uuid())
  type         String
  name         String
  location     String?
  capacity     Int?
  description  String?
  tags         Json?
  availability Json?
  metadata     Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  bookings FacilityBookingRecord[]

  @@schema("facilities")
}

model FacilityBookingRecord {
  id             String   @id @default(uuid())
  resourceId     String
  title          String
  description    String?
  startTime      DateTime
  endTime        DateTime
  status         String   @default("confirmed")
  createdBy      String
  createdByName  String?
  createdByEmail String?
  participants   Json?
  metadata       Json?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  resource FacilityResourceRecord @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  @@index([resourceId, startTime])
  @@index([status])
  @@schema("facilities")
}
